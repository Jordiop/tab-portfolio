This file is a merged representation of the entire codebase, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
.gitignore
env.d.ts
index.html
package.json
README.md
src/App.vue
src/assets/logo.svg
src/assets/main.css
src/components/HelloWorld.vue
src/components/icons/IconCommunity.vue
src/components/icons/IconDocumentation.vue
src/components/icons/IconEcosystem.vue
src/components/icons/IconSupport.vue
src/components/icons/IconTooling.vue
src/components/TheWelcome.vue
src/components/WelcomeItem.vue
src/main.ts
src/router/index.ts
src/views/About.vue
src/views/Home.vue
tsconfig.app.json
tsconfig.json
tsconfig.node.json
vite.config.ts

================================================================
Files
================================================================

================
File: .gitignore
================
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
.DS_Store
dist
dist-ssr
coverage
*.local

/cypress/videos/
/cypress/screenshots/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

*.tsbuildinfo

================
File: env.d.ts
================
/// <reference types="vite/client" />

================
File: index.html
================
<!DOCTYPE html>
<html lang="">
  <head>
    <meta charset="UTF-8">
    <link rel="icon" href="/favicon.ico">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vite App</title>
  </head>
  <body>
    <div id="app"></div>
    <script type="module" src="/src/main.ts"></script>
  </body>
</html>

================
File: package.json
================
{
  "name": "tab-portfolio",
  "version": "0.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "run-p type-check \"build-only {@}\" --",
    "preview": "vite preview",
    "build-only": "vite build",
    "type-check": "vue-tsc --build"
  },
  "dependencies": {
    "@tailwindcss/vite": "^4.0.9",
    "tailwindcss": "^4.0.9",
    "vue": "^3.5.13",
    "vue-router": "^4.5.0"
  },
  "devDependencies": {
    "@tsconfig/node22": "^22.0.0",
    "@types/node": "^22.13.4",
    "@vitejs/plugin-vue": "^5.2.1",
    "@vue/tsconfig": "^0.7.0",
    "npm-run-all2": "^7.0.2",
    "typescript": "~5.7.3",
    "vite": "^6.1.0",
    "vite-plugin-vue-devtools": "^7.7.2",
    "vue-tsc": "^2.2.2"
  }
}

================
File: README.md
================
# tab-portfolio

This template should help get you started developing with Vue 3 in Vite.

## Recommended IDE Setup

[VSCode](https://code.visualstudio.com/) + [Volar](https://marketplace.visualstudio.com/items?itemName=Vue.volar) (and disable Vetur).

## Type Support for `.vue` Imports in TS

TypeScript cannot handle type information for `.vue` imports by default, so we replace the `tsc` CLI with `vue-tsc` for type checking. In editors, we need [Volar](https://marketplace.visualstudio.com/items?itemName=Vue.volar) to make the TypeScript language service aware of `.vue` types.

## Customize configuration

See [Vite Configuration Reference](https://vite.dev/config/).

## Project Setup

```sh
npm install
```

### Compile and Hot-Reload for Development

```sh
npm run dev
```

### Type-Check, Compile and Minify for Production

```sh
npm run build
```

================
File: src/App.vue
================
<script setup lang="ts">
import { ref } from 'vue'
import { useRouter } from 'vue-router'

const router = useRouter()
const activeTab = ref('Home.vue')

const navigateTo = (path: string, tab: string) => {
  router.push(path)
  activeTab.value = tab
}
</script>

<template>
  <div id="app">
    <div class="sidebar">
      <div class="sidebar-icon" @click="navigateTo('/', 'Home.vue')">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path><polyline points="9 22 9 12 15 12 15 22"></polyline></svg>
      </div>
      <div class="sidebar-icon" @click="navigateTo('/about', 'About.vue')">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="10" r="3"></circle><path d="M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662"></path></svg>
      </div>
      <div class="sidebar-icon" @click="navigateTo('/projects', 'Projects.vue')">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"></path></svg>
      </div>
      <div class="sidebar-icon" @click="navigateTo('/contact', 'Contact-Me.vue')">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path></svg>
      </div>
    </div>
    <div class="main-content">
      <div class="tab-bar">
        <div 
          class="tab" 
          :class="{ active: activeTab === 'Home.vue' }"
          @click="navigateTo('/', 'Home.vue')"
        >
          Home.vue
        </div>
        <div 
          class="tab" 
          :class="{ active: activeTab === 'About.vue' }"
          @click="navigateTo('/about', 'About.vue')"
        >
          About.vue
        </div>
        <div 
          class="tab" 
          :class="{ active: activeTab === 'Projects.vue' }"
          @click="navigateTo('/projects', 'Projects.vue')"
        >
          Projects.vue
        </div>
        <div 
          class="tab" 
          :class="{ active: activeTab === 'Contact-Me.vue' }"
          @click="navigateTo('/contact', 'Contact-Me.vue')"
        >
          Contact-Me.vue
        </div>
      </div>
      <div class="content-area">
        <router-view></router-view>
      </div>
    </div>
  </div>
</template>

================
File: src/assets/logo.svg
================
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 261.76 226.69"><path d="M161.096.001l-30.225 52.351L100.647.001H-.005l130.877 226.688L261.749.001z" fill="#41b883"/><path d="M161.096.001l-30.225 52.351L100.647.001H52.346l78.526 136.01L209.398.001z" fill="#34495e"/></svg>

================
File: src/assets/main.css
================
@import "tailwindcss";

:root {
  font-family: 'JetBrains Mono', monospace;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #2f2d36;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0;
  min-width: 320px;
  min-height: 100vh;
}

#app {
  width: 100%;
  height: 100vh;
  display: flex;
}

.sidebar {
  width: 50px;
  background-color: #1f1f21;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 20px;
  border-right: 1px solid #2a2438;
}

.sidebar-icon {
  width: 24px;
  height: 24px;
  margin-bottom: 20px;
  color: #6e6a86;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.sidebar-icon:hover, .sidebar-icon.active {
  color: #e0def4;
}

.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.tab-bar {
  height: 40px;
  background-color: #1f1f21;
  display: flex;
  border-bottom: 1px solid #2a2438;
}

.tab {
  padding: 0 20px;
  display: flex;
  align-items: center;
  color: #6e6a86;
  border-right: 1px solid #2a2438;
  cursor: pointer;
  font-size: 14px;
}

.tab.active {
  color: #e0def4;
  background-color: #13111c;
}

.content-area {
  flex: 1;
  display: flex;
  overflow: hidden;
}

.code-editor {
  flex: 1;
  padding: 20px;
  overflow-y: auto;
}

.line-numbers {
  width: 50px;
  text-align: right;
  padding: 20px 10px 20px 0;
  color: #6e6a86;
  user-select: none;
  font-size: 14px;
}

.code-content {
  flex: 1;
  padding: 20px 0;
  font-size: 14px;
}

.code-line {
  display: flex;
  margin-bottom: 5px;
}

.code-text {
  padding-left: 15px;
}

.keyword {
  color: #c4a7e7;
}

.string {
  color: #f6c177;
}

.comment {
  color: #6e6a86;
}

.function {
  color: #9ccfd8;
}

.variable {
  color: #e0def4;
}

.preview {
  flex: 1;
  background-color: #13111c;
  padding: 20px;
  border-left: 1px solid #2a2438;
  overflow-y: auto;
}

.hero-section {
  padding: 40px;
  height: 100%;
}

.greeting {
  font-size: 18px;
  margin-bottom: 10px;
  display: flex;
  align-items: center;
}

.hand-emoji {
  margin-left: 10px;
  font-size: 24px;
}

.name {
  font-size: 80px;
  font-weight: bold;
  margin: 0;
  line-height: 1;
}

.tagline {
  margin-top: 20px;
  font-size: 18px;
}

.highlight {
  color: #c4a7e7;
}

.highlight-react {
  color: #9ccfd8;
}

.highlight-ai {
  color: #f6c177;
}

.buttons {
  margin-top: 30px;
  display: flex;
  gap: 15px;
}

.btn {
  padding: 10px 20px;
  border: 1px solid #6e6a86;
  border-radius: 4px;
  background: transparent;
  color: #e0def4;
  cursor: pointer;
  font-family: 'JetBrains Mono', monospace;
  transition: all 0.3s ease;
}

.btn:hover {
  background-color: rgba(110, 106, 134, 0.2);
}

.btn-primary {
  background-color: #c4a7e7;
  color: #13111c;
  border-color: #c4a7e7;
}

.btn-primary:hover {
  background-color: #b393dd;
  border-color: #b393dd;
}

@media (max-width: 768px) {
  .content-area {
    flex-direction: column;
  }
  
  .name {
    font-size: 50px;
  }
}

================
File: src/components/HelloWorld.vue
================
<script setup lang="ts">
defineProps<{
  msg: string
}>()
</script>

<template>
  <div class="greetings">
    <h1 class="green">{{ msg }}</h1>
    <h3>
      You’ve successfully created a project with
      <a href="https://vite.dev/" target="_blank" rel="noopener">Vite</a> +
      <a href="https://vuejs.org/" target="_blank" rel="noopener">Vue 3</a>. What's next?
    </h3>
  </div>
</template>

<style scoped>
h1 {
  font-weight: 500;
  font-size: 2.6rem;
  position: relative;
  top: -10px;
}

h3 {
  font-size: 1.2rem;
}

.greetings h1,
.greetings h3 {
  text-align: center;
}

@media (min-width: 1024px) {
  .greetings h1,
  .greetings h3 {
    text-align: left;
  }
}
</style>

================
File: src/components/icons/IconCommunity.vue
================
<template>
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor">
    <path
      d="M15 4a1 1 0 1 0 0 2V4zm0 11v-1a1 1 0 0 0-1 1h1zm0 4l-.707.707A1 1 0 0 0 16 19h-1zm-4-4l.707-.707A1 1 0 0 0 11 14v1zm-4.707-1.293a1 1 0 0 0-1.414 1.414l1.414-1.414zm-.707.707l-.707-.707.707.707zM9 11v-1a1 1 0 0 0-.707.293L9 11zm-4 0h1a1 1 0 0 0-1-1v1zm0 4H4a1 1 0 0 0 1.707.707L5 15zm10-9h2V4h-2v2zm2 0a1 1 0 0 1 1 1h2a3 3 0 0 0-3-3v2zm1 1v6h2V7h-2zm0 6a1 1 0 0 1-1 1v2a3 3 0 0 0 3-3h-2zm-1 1h-2v2h2v-2zm-3 1v4h2v-4h-2zm1.707 3.293l-4-4-1.414 1.414 4 4 1.414-1.414zM11 14H7v2h4v-2zm-4 0c-.276 0-.525-.111-.707-.293l-1.414 1.414C5.42 15.663 6.172 16 7 16v-2zm-.707 1.121l3.414-3.414-1.414-1.414-3.414 3.414 1.414 1.414zM9 12h4v-2H9v2zm4 0a3 3 0 0 0 3-3h-2a1 1 0 0 1-1 1v2zm3-3V3h-2v6h2zm0-6a3 3 0 0 0-3-3v2a1 1 0 0 1 1 1h2zm-3-3H3v2h10V0zM3 0a3 3 0 0 0-3 3h2a1 1 0 0 1 1-1V0zM0 3v6h2V3H0zm0 6a3 3 0 0 0 3 3v-2a1 1 0 0 1-1-1H0zm3 3h2v-2H3v2zm1-1v4h2v-4H4zm1.707 4.707l.586-.586-1.414-1.414-.586.586 1.414 1.414z"
    />
  </svg>
</template>

================
File: src/components/icons/IconDocumentation.vue
================
<template>
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="17" fill="currentColor">
    <path
      d="M11 2.253a1 1 0 1 0-2 0h2zm-2 13a1 1 0 1 0 2 0H9zm.447-12.167a1 1 0 1 0 1.107-1.666L9.447 3.086zM1 2.253L.447 1.42A1 1 0 0 0 0 2.253h1zm0 13H0a1 1 0 0 0 1.553.833L1 15.253zm8.447.833a1 1 0 1 0 1.107-1.666l-1.107 1.666zm0-14.666a1 1 0 1 0 1.107 1.666L9.447 1.42zM19 2.253h1a1 1 0 0 0-.447-.833L19 2.253zm0 13l-.553.833A1 1 0 0 0 20 15.253h-1zm-9.553-.833a1 1 0 1 0 1.107 1.666L9.447 14.42zM9 2.253v13h2v-13H9zm1.553-.833C9.203.523 7.42 0 5.5 0v2c1.572 0 2.961.431 3.947 1.086l1.107-1.666zM5.5 0C3.58 0 1.797.523.447 1.42l1.107 1.666C2.539 2.431 3.928 2 5.5 2V0zM0 2.253v13h2v-13H0zm1.553 13.833C2.539 15.431 3.928 15 5.5 15v-2c-1.92 0-3.703.523-5.053 1.42l1.107 1.666zM5.5 15c1.572 0 2.961.431 3.947 1.086l1.107-1.666C9.203 13.523 7.42 13 5.5 13v2zm5.053-11.914C11.539 2.431 12.928 2 14.5 2V0c-1.92 0-3.703.523-5.053 1.42l1.107 1.666zM14.5 2c1.573 0 2.961.431 3.947 1.086l1.107-1.666C18.203.523 16.421 0 14.5 0v2zm3.5.253v13h2v-13h-2zm1.553 12.167C18.203 13.523 16.421 13 14.5 13v2c1.573 0 2.961.431 3.947 1.086l1.107-1.666zM14.5 13c-1.92 0-3.703.523-5.053 1.42l1.107 1.666C11.539 15.431 12.928 15 14.5 15v-2z"
    />
  </svg>
</template>

================
File: src/components/icons/IconEcosystem.vue
================
<template>
  <svg xmlns="http://www.w3.org/2000/svg" width="18" height="20" fill="currentColor">
    <path
      d="M11.447 8.894a1 1 0 1 0-.894-1.789l.894 1.789zm-2.894-.789a1 1 0 1 0 .894 1.789l-.894-1.789zm0 1.789a1 1 0 1 0 .894-1.789l-.894 1.789zM7.447 7.106a1 1 0 1 0-.894 1.789l.894-1.789zM10 9a1 1 0 1 0-2 0h2zm-2 2.5a1 1 0 1 0 2 0H8zm9.447-5.606a1 1 0 1 0-.894-1.789l.894 1.789zm-2.894-.789a1 1 0 1 0 .894 1.789l-.894-1.789zm2 .789a1 1 0 1 0 .894-1.789l-.894 1.789zm-1.106-2.789a1 1 0 1 0-.894 1.789l.894-1.789zM18 5a1 1 0 1 0-2 0h2zm-2 2.5a1 1 0 1 0 2 0h-2zm-5.447-4.606a1 1 0 1 0 .894-1.789l-.894 1.789zM9 1l.447-.894a1 1 0 0 0-.894 0L9 1zm-2.447.106a1 1 0 1 0 .894 1.789l-.894-1.789zm-6 3a1 1 0 1 0 .894 1.789L.553 4.106zm2.894.789a1 1 0 1 0-.894-1.789l.894 1.789zm-2-.789a1 1 0 1 0-.894 1.789l.894-1.789zm1.106 2.789a1 1 0 1 0 .894-1.789l-.894 1.789zM2 5a1 1 0 1 0-2 0h2zM0 7.5a1 1 0 1 0 2 0H0zm8.553 12.394a1 1 0 1 0 .894-1.789l-.894 1.789zm-1.106-2.789a1 1 0 1 0-.894 1.789l.894-1.789zm1.106 1a1 1 0 1 0 .894 1.789l-.894-1.789zm2.894.789a1 1 0 1 0-.894-1.789l.894 1.789zM8 19a1 1 0 1 0 2 0H8zm2-2.5a1 1 0 1 0-2 0h2zm-7.447.394a1 1 0 1 0 .894-1.789l-.894 1.789zM1 15H0a1 1 0 0 0 .553.894L1 15zm1-2.5a1 1 0 1 0-2 0h2zm12.553 2.606a1 1 0 1 0 .894 1.789l-.894-1.789zM17 15l.447.894A1 1 0 0 0 18 15h-1zm1-2.5a1 1 0 1 0-2 0h2zm-7.447-5.394l-2 1 .894 1.789 2-1-.894-1.789zm-1.106 1l-2-1-.894 1.789 2 1 .894-1.789zM8 9v2.5h2V9H8zm8.553-4.894l-2 1 .894 1.789 2-1-.894-1.789zm.894 0l-2-1-.894 1.789 2 1 .894-1.789zM16 5v2.5h2V5h-2zm-4.553-3.894l-2-1-.894 1.789 2 1 .894-1.789zm-2.894-1l-2 1 .894 1.789 2-1L8.553.106zM1.447 5.894l2-1-.894-1.789-2 1 .894 1.789zm-.894 0l2 1 .894-1.789-2-1-.894 1.789zM0 5v2.5h2V5H0zm9.447 13.106l-2-1-.894 1.789 2 1 .894-1.789zm0 1.789l2-1-.894-1.789-2 1 .894 1.789zM10 19v-2.5H8V19h2zm-6.553-3.894l-2-1-.894 1.789 2 1 .894-1.789zM2 15v-2.5H0V15h2zm13.447 1.894l2-1-.894-1.789-2 1 .894 1.789zM18 15v-2.5h-2V15h2z"
    />
  </svg>
</template>

================
File: src/components/icons/IconSupport.vue
================
<template>
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor">
    <path
      d="M10 3.22l-.61-.6a5.5 5.5 0 0 0-7.666.105 5.5 5.5 0 0 0-.114 7.665L10 18.78l8.39-8.4a5.5 5.5 0 0 0-.114-7.665 5.5 5.5 0 0 0-7.666-.105l-.61.61z"
    />
  </svg>
</template>

================
File: src/components/icons/IconTooling.vue
================
<!-- This icon is from <https://github.com/Templarian/MaterialDesign>, distributed under Apache 2.0 (https://www.apache.org/licenses/LICENSE-2.0) license-->
<template>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    aria-hidden="true"
    role="img"
    class="iconify iconify--mdi"
    width="24"
    height="24"
    preserveAspectRatio="xMidYMid meet"
    viewBox="0 0 24 24"
  >
    <path
      d="M20 18v-4h-3v1h-2v-1H9v1H7v-1H4v4h16M6.33 8l-1.74 4H7v-1h2v1h6v-1h2v1h2.41l-1.74-4H6.33M9 5v1h6V5H9m12.84 7.61c.1.22.16.48.16.8V18c0 .53-.21 1-.6 1.41c-.4.4-.85.59-1.4.59H4c-.55 0-1-.19-1.4-.59C2.21 19 2 18.53 2 18v-4.59c0-.32.06-.58.16-.8L4.5 7.22C4.84 6.41 5.45 6 6.33 6H7V5c0-.55.18-1 .57-1.41C7.96 3.2 8.44 3 9 3h6c.56 0 1.04.2 1.43.59c.39.41.57.86.57 1.41v1h.67c.88 0 1.49.41 1.83 1.22l2.34 5.39z"
      fill="currentColor"
    ></path>
  </svg>
</template>

================
File: src/components/TheWelcome.vue
================
<script setup lang="ts">
import WelcomeItem from './WelcomeItem.vue'
import DocumentationIcon from './icons/IconDocumentation.vue'
import ToolingIcon from './icons/IconTooling.vue'
import EcosystemIcon from './icons/IconEcosystem.vue'
import CommunityIcon from './icons/IconCommunity.vue'
import SupportIcon from './icons/IconSupport.vue'

const openReadmeInEditor = () => fetch('/__open-in-editor?file=README.md')
</script>

<template>
  <WelcomeItem>
    <template #icon>
      <DocumentationIcon />
    </template>
    <template #heading>Documentation</template>

    Vue’s
    <a href="https://vuejs.org/" target="_blank" rel="noopener">official documentation</a>
    provides you with all information you need to get started.
  </WelcomeItem>

  <WelcomeItem>
    <template #icon>
      <ToolingIcon />
    </template>
    <template #heading>Tooling</template>

    This project is served and bundled with
    <a href="https://vite.dev/guide/features.html" target="_blank" rel="noopener">Vite</a>. The
    recommended IDE setup is
    <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VSCode</a>
    +
    <a href="https://github.com/johnsoncodehk/volar" target="_blank" rel="noopener">Volar</a>. If
    you need to test your components and web pages, check out
    <a href="https://vitest.dev/" target="_blank" rel="noopener">Vitest</a>
    and
    <a href="https://www.cypress.io/" target="_blank" rel="noopener">Cypress</a>
    /
    <a href="https://playwright.dev/" target="_blank" rel="noopener">Playwright</a>.

    <br />

    More instructions are available in
    <a href="javascript:void(0)" @click="openReadmeInEditor"><code>README.md</code></a
    >.
  </WelcomeItem>

  <WelcomeItem>
    <template #icon>
      <EcosystemIcon />
    </template>
    <template #heading>Ecosystem</template>

    Get official tools and libraries for your project:
    <a href="https://pinia.vuejs.org/" target="_blank" rel="noopener">Pinia</a>,
    <a href="https://router.vuejs.org/" target="_blank" rel="noopener">Vue Router</a>,
    <a href="https://test-utils.vuejs.org/" target="_blank" rel="noopener">Vue Test Utils</a>, and
    <a href="https://github.com/vuejs/devtools" target="_blank" rel="noopener">Vue Dev Tools</a>. If
    you need more resources, we suggest paying
    <a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="noopener">Awesome Vue</a>
    a visit.
  </WelcomeItem>

  <WelcomeItem>
    <template #icon>
      <CommunityIcon />
    </template>
    <template #heading>Community</template>

    Got stuck? Ask your question on
    <a href="https://chat.vuejs.org" target="_blank" rel="noopener">Vue Land</a>
    (our official Discord server), or
    <a href="https://stackoverflow.com/questions/tagged/vue.js" target="_blank" rel="noopener"
      >StackOverflow</a
    >. You should also follow the official
    <a href="https://bsky.app/profile/vuejs.org" target="_blank" rel="noopener">@vuejs.org</a>
    Bluesky account or the
    <a href="https://x.com/vuejs" target="_blank" rel="noopener">@vuejs</a>
    X account for latest news in the Vue world.
  </WelcomeItem>

  <WelcomeItem>
    <template #icon>
      <SupportIcon />
    </template>
    <template #heading>Support Vue</template>

    As an independent project, Vue relies on community backing for its sustainability. You can help
    us by
    <a href="https://vuejs.org/sponsor/" target="_blank" rel="noopener">becoming a sponsor</a>.
  </WelcomeItem>
</template>

================
File: src/components/WelcomeItem.vue
================
<template>
  <div class="item">
    <i>
      <slot name="icon"></slot>
    </i>
    <div class="details">
      <h3>
        <slot name="heading"></slot>
      </h3>
      <slot></slot>
    </div>
  </div>
</template>

<style scoped>
.item {
  margin-top: 2rem;
  display: flex;
  position: relative;
}

.details {
  flex: 1;
  margin-left: 1rem;
}

i {
  display: flex;
  place-items: center;
  place-content: center;
  width: 32px;
  height: 32px;

  color: var(--color-text);
}

h3 {
  font-size: 1.2rem;
  font-weight: 500;
  margin-bottom: 0.4rem;
  color: var(--color-heading);
}

@media (min-width: 1024px) {
  .item {
    margin-top: 0;
    padding: 0.4rem 0 1rem calc(var(--section-gap) / 2);
  }

  i {
    top: calc(50% - 25px);
    left: -26px;
    position: absolute;
    border: 1px solid var(--color-border);
    background: var(--color-background);
    border-radius: 8px;
    width: 50px;
    height: 50px;
  }

  .item:before {
    content: ' ';
    border-left: 1px solid var(--color-border);
    position: absolute;
    left: 0;
    bottom: calc(50% + 25px);
    height: calc(50% - 25px);
  }

  .item:after {
    content: ' ';
    border-left: 1px solid var(--color-border);
    position: absolute;
    left: 0;
    top: calc(50% + 25px);
    height: calc(50% - 25px);
  }

  .item:first-of-type:before {
    display: none;
  }

  .item:last-of-type:after {
    display: none;
  }
}
</style>

================
File: src/main.ts
================
import './assets/main.css'

import { createApp } from 'vue'
import App from './App.vue'
import router from './router'

const app = createApp(App)

app.use(router)

app.mount('#app')

================
File: src/router/index.ts
================
import { createRouter, createWebHistory } from 'vue-router'
import HomeView from '../views/Home.vue'

const router = createRouter({
  history: createWebHistory(import.meta.env.BASE_URL),
  routes: [
    {
      path: '/',
      name: 'home',
      component: HomeView,
    },
    {
      path: '/about',
      name: 'about',
      // route level code-splitting
      // this generates a separate chunk (About.[hash].js) for this route
      // which is lazy-loaded when the route is visited.
      component: () => import('../views/About.vue'),
    },
  ],
})

export default router

================
File: src/views/About.vue
================
<script setup lang="ts">
// About view component
</script>

<template>
  <div class="code-editor">
    <div class="code-line" v-for="n in 17" :key="n">
      <div class="line-numbers">{{ n }}</div>
      <div class="code-text">
        <template v-if="n === 1">
          <span class="comment">// Welcome to my Portfolio! 🚀</span>
        </template>
        <template v-else-if="n === 2">
          <span class="keyword">import</span> { NextDeveloper } <span class="keyword">from</span> <span class="string">'agaka'</span>
        </template>
        <template v-else-if="n === 4">
          <span class="keyword">const</span> <span class="variable">About</span> = () => {
        </template>
        <template v-else-if="n === 5">
          <span class="keyword">  return</span> (
        </template>
        <template v-else-if="n === 6">
          <span>    &lt;<span class="function">div</span> <span class="variable">className</span>=<span class="string">"about-container"</span>&gt;</span>
        </template>
        <template v-else-if="n === 7">
          <span>      &lt;<span class="function">h2</span>&gt;About Me&lt;/<span class="function">h2</span>&gt;</span>
        </template>
        <template v-else-if="n === 8">
          <span>      &lt;<span class="function">p</span>&gt;I'm a passionate developer specializing in modern web technologies.&lt;/<span class="function">p</span>&gt;</span>
        </template>
        <template v-else-if="n === 9">
          <span>      &lt;<span class="function">p</span>&gt;With expertise in React, Next.js, and AI integration, I build efficient and scalable applications.&lt;/<span class="function">p</span>&gt;</span>
        </template>
        <template v-else-if="n === 10">
          <span>      &lt;<span class="function">h3</span>&gt;Skills&lt;/<span class="function">h3</span>&gt;</span>
        </template>
        <template v-else-if="n === 11">
          <span>      &lt;<span class="function">ul</span>&gt;</span>
        </template>
        <template v-else-if="n === 12">
          <span>        &lt;<span class="function">li</span>&gt;React & Next.js&lt;/<span class="function">li</span>&gt;</span>
        </template>
        <template v-else-if="n === 13">
          <span>        &lt;<span class="function">li</span>&gt;TypeScript&lt;/<span class="function">li</span>&gt;</span>
        </template>
        <template v-else-if="n === 14">
          <span>        &lt;<span class="function">li</span>&gt;AI Integration&lt;/<span class="function">li</span>&gt;</span>
        </template>
        <template v-else-if="n === 15">
          <span>      &lt;/<span class="function">ul</span>&gt;</span>
        </template>
        <template v-else-if="n === 16">
          <span>    &lt;/<span class="function">div</span>&gt;</span>
        </template>
        <template v-else-if="n === 17">
          <span>  )</span>
        </template>
      </div>
    </div>
  </div>
  <div class="preview">
    <div style="padding: 40px;">
      <h2>About Me</h2>
      <p>I'm a passionate developer specializing in modern web technologies.</p>
      <p>With expertise in Vue, Nuxt JS, and learning AI integration, I build efficient and scalable applications.</p>
      
      <h3>Skills</h3>
      <ul>
        <li>Vue & Nuxt JS</li>
        <li>TypeScript</li>
        <li>AI Integration</li>
        <li>Tailwind CSS</li>
        <li>Vuetify</li>
        <li>Highcharts</li>
        <li>Node.js</li>
        <li>Responsive Design</li>
      </ul>
      
      <h3>Experience</h3>
      <p>Over 2 years of experience in web development, working with established companies delivering high-quality solutions.</p>
    </div>
  </div>
</template>

================
File: src/views/Home.vue
================
<script setup lang="ts">
// Home view component
</script>

<template>
  <div class="code-editor">
    <div class="code-line" v-for="n in 35" :key="n">
      <div class="line-numbers">{{ n }}</div>
      <div class="code-text" v-if="n === 10">
        <span>Hello </span>
        <span class="string">👋</span>
        <span>, I'm</span>
      </div>
      <div class="code-text" v-else-if="n >= 12 && n <= 16">
        <span class="variable">Aga</span>
      </div>
      <div class="code-text" v-else-if="n >= 18 && n <= 22">
        <span class="variable">Kadela</span>
      </div>
      <div class="code-text" v-else-if="n === 23">
        <span class="comment">// I Fix, Optimize & Build </span>
        <span class="highlight">{Next js}</span>
        <span class="comment"> & </span>
      </div>
      <div class="code-text" v-else-if="n === 24">
        <span class="highlight-react">{React}</span>
        <span class="comment"> Apps - Powered by </span>
        <span class="highlight-ai">{AI}</span>
      </div>
      <div class="code-text" v-else-if="n === 26">
        <span class="btn btn-primary">See My Work</span>
        <span style="margin-left: 20px;">Contact Me</span>
      </div>
    </div>
  </div>
  <div class="preview">
    <div class="hero-section">
      <div class="greeting">
        Hello <span class="hand-emoji">👋</span>, I'm
      </div>
      <h1 class="name">Jordi<br>Osarenkhoe</h1>
      <div class="tagline">
        I Fix, Optimize & Build <span class="highlight">{ Nuxt JS }</span> & 
        <span class="highlight-react">{ VUE JS }</span> Apps
      </div>
      <div class="buttons">
        <button class="btn btn-primary" @click="$router.push('/projects')">See My Work</button>
        <button class="btn" @click="$router.push('/contact')">Contact Me</button>
      </div>
    </div>
  </div>
</template>

================
File: tsconfig.app.json
================
{
  "extends": "@vue/tsconfig/tsconfig.dom.json",
  "include": ["env.d.ts", "src/**/*", "src/**/*.vue"],
  "exclude": ["src/**/__tests__/*"],
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",

    "paths": {
      "@/*": ["./src/*"]
    }
  }
}

================
File: tsconfig.json
================
{
  "files": [],
  "references": [
    {
      "path": "./tsconfig.node.json"
    },
    {
      "path": "./tsconfig.app.json"
    }
  ]
}

================
File: tsconfig.node.json
================
{
  "extends": "@tsconfig/node22/tsconfig.json",
  "include": [
    "vite.config.*",
    "vitest.config.*",
    "cypress.config.*",
    "nightwatch.conf.*",
    "playwright.config.*",
    "eslint.config.*"
  ],
  "compilerOptions": {
    "noEmit": true,
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",

    "module": "ESNext",
    "moduleResolution": "Bundler",
    "types": ["node"]
  }
}

================
File: vite.config.ts
================
import { fileURLToPath, URL } from 'node:url'

import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'
import vueDevTools from 'vite-plugin-vue-devtools'
import tailwindcss from '@tailwindcss/vite'

// https://vite.dev/config/
export default defineConfig({
  plugins: [
    vue(),
    vueDevTools(),
    tailwindcss(),
  ],
  resolve: {
    alias: {
      '@': fileURLToPath(new URL('./src', import.meta.url))
    },
  },
})



================================================================
End of Codebase
================================================================
